name: Deploy to AWS Lambda

on:
  push:
    branches:
      - main  # Deploy when pushing to main branch
  pull_request:
    branches:
      - main  # Run tests on PRs, but don't deploy
  workflow_dispatch:  # Allow manual trigger from any branch
    inputs:
      deploy:
        description: 'Deploy to AWS? (yes/no)'
        required: false
        default: 'yes'

env:
  AWS_REGION: us-east-1
  PYTHON_VERSION: "3.13"

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          python -m pytest tests/ -v --cov=src --cov-report=term-missing

  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    needs: test  # Only run if tests pass
    if: |
      (github.ref == 'refs/heads/main' && github.event_name == 'push') ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.deploy == 'yes')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Set up AWS SAM CLI
        uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: SAM Build
        run: sam build

      - name: SAM Deploy
        run: |
          sam deploy --no-confirm-changeset --no-fail-on-empty-changeset \
            --s3-bucket s3-model-registry-bucket \
            --parameter-overrides "HuggingFaceToken=${{ secrets.HF_TOKEN }}"

      - name: Get Lambda Function ARNs
        run: |
          echo "Deployed Lambda Functions:"
          aws cloudformation describe-stacks \
            --stack-name acme-package-registry \
            --query 'Stacks[0].Outputs[*].[OutputKey,OutputValue]' \
            --output table
          echo ""
          echo "Note: Connect these Lambda functions to your API Gateway manually"
